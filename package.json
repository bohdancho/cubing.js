{
  "name": "cubing",
  "version": "0.21.0-pre9",
  "description": "A collection of Javascript cubing libraries.",
  "author": "The js.cubing.net team",
  "type": "module",
  "types": "dist/types/index.d.ts",
  "license": "GPL-3.0-or-later",
  "repository": "github:cubing/cubing.js",
  "dependencies": {
    "@types/three": "^0.126.1",
    "@types/web-bluetooth": "0.0.4",
    "comlink": "^4.3.1",
    "three": "^0.126.1"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.15.8",
    "@babel/preset-env": "^7.15.8",
    "@babel/preset-typescript": "^7.13.0",
    "@babylonjs/core": "^5.0.0-alpha.24",
    "@types/jest": "^26.0.23",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "babel-jest": "^27.2.4",
    "barely-a-dev-server": "^0.2.4",
    "esbuild": "^0.12.29",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-html": "^6.1.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "^27.0.5",
    "jszip": "^3.5.0",
    "peggy": "^1.1.0",
    "prettier": "^2.2.1",
    "puppeteer": "^8.0.0",
    "ts-jest": "^27.0.3",
    "typescript": "^4.3.2",
    "yargs": "^16.2.0"
  },
  "mainDevDependencies": [
    "@babylonjs/core",
    "barely-a-dev-server",
    "esbuild",
    "jszip"
  ],
  "scripts": {
    "build": "npm run clean && node ./script/build/main.js all",
    "build-esm": "node ./script/build/main.js esm",
    "build-bundle-global": "node ./script/build/main.js bundle-global",
    "build-types": "node ./script/build/main.js types",
    "build-bin": "node ./script/build/main.js bin",
    "build-sites": "npm run build-site-twizzle && npm run build-site-experiments",
    "build-site-twizzle": "node ./script/build/main.js twizzle",
    "build-site-experiments": "node ./script/build/main.js experiments",
    "build-search-worker": "node ./script/build/main.js search-worker",
    "generate-js": "npm run generate-js-parsers && npm run generate-js-svg",
    "generate-js-parsers": "npx peggy --format es src/cubing/kpuzzle/parser/parser-peggy.peggy",
    "generate-js-svg": "echo \"TODO: Generating JS for SVGs is not implemented yet.\"",
    "dev": "npm run initial-setup-checked && node ./script/build/main.js sites dev",
    "clean": "rm -rf dist .temp coverage src/cubing/search/worker-inside-generated* ./alg ./bluetooth ./kpuzzle ./notation ./protocol ./puzzle-geometry ./puzzles ./scramble ./search ./stream ./twisty",
    "test": "npm run test-jest && npm run lint && npm run test-import-restrictions && npm run test-tsc # keep test.yml in sync with this",
    "test-dist-esm-node-import": "node script/test/dist/esm/node-import/main.mjs",
    "test-dist-esm-parcel": "node ./script/test/dist/esm/parcel/main.js",
    "test-dist-esm-perf": "node script/test/dist/esm/perf/*.mjs",
    "test-dist-experiments": "node ./script/test/dist/experiments/main.js",
    "test-import-restrictions": "node ./script/test/import-restrictions/main.js",
    "test-jest": "npx jest --collectCoverage",
    "test-tsc": "npm run build-types && npx tsc --build ./tsconfig.json",
    "format": "npx eslint --fix --ext=js,ts src script; npx prettier --write src script",
    "setup": "npm install",
    "initial-setup-checked": "[ -d \"node_modules\" ] || npm run initial-setup",
    "initial-setup": "node ./script/initial-setup/main.js",
    "lint": "npx eslint --ext=js,ts src script",
    "prepack": "npm run clean && npm run build && npm run test-dist-esm-node-import"
  },
  "targets": {
    "twizzle-net": {},
    "experiments-cubing-net": {}
  },
  "keywords": [
    "cubing",
    "speedcubing",
    "puzzle",
    "visualization",
    "kpuzzle",
    "cuble",
    "bluetooth",
    "rubik",
    "rubik's"
  ],
  "eslintConfig": {
    "parser": "@babel/eslint-parser",
    "parserOptions": {
      "project": "./tsconfig-eslint.json"
    },
    "overrides": [
      {
        "files": "**/*.js",
        "parser": "@babel/eslint-parser",
        "extends": [
          "eslint:recommended"
        ],
        "rules": {
          "no-unused-vars": [
            "error",
            {
              "argsIgnorePattern": "^_"
            }
          ]
        }
      },
      {
        "files": "**/*.ts",
        "parser": "@typescript-eslint/parser",
        "plugins": [
          "@typescript-eslint"
        ],
        "extends": [
          "eslint:recommended",
          "plugin:@typescript-eslint/recommended",
          "plugin:@typescript-eslint/recommended-requiring-type-checking"
        ],
        "rules": {
          "@typescript-eslint/no-inferrable-types": "off",
          "@typescript-eslint/no-floating-promises": "off",
          "@typescript-eslint/no-unsafe-assignment": "off",
          "@typescript-eslint/no-unsafe-member-access": "off",
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-misused-promises": "off",
          "@typescript-eslint/require-await": "off",
          "@typescript-eslint/no-unused-vars": [
            "error",
            {
              "argsIgnorePattern": "^_"
            }
          ],
          "@typescript-eslint/no-unsafe-argument": "off",
          "@typescript-eslint/no-non-null-assertion": "off",
          "@typescript-eslint/no-unsafe-call": "off",
          "@typescript-eslint/no-empty-function": "off",
          "@typescript-eslint/restrict-plus-operands": "off",
          "@typescript-eslint/restrict-template-expressions": "off"
        }
      }
    ],
    "ignorePatterns": [
      "/src/static",
      "/src/cubing/search/worker-inside-generated*",
      "parser-peggy.js"
    ],
    "globals": {
      "globalThis": false,
      "Promise": false,
      "Symbol": false
    },
    "env": {
      "commonjs": true,
      "browser": true,
      "node": true
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "all",
    "tabWidth": 2,
    "quoteProps": "consistent"
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "current"
          }
        }
      ],
      "@babel/preset-typescript"
    ]
  },
  "jest": {
    "roots": [
      "<rootDir>/src",
      "<rootDir>/script"
    ],
    "coverageDirectory": "<rootDir>/.temp/coverage"
  },
  "files": [
    "/LICENSE.md",
    "/README.md",
    "/package.json",
    "/package-lock.json",
    "/dist/**/*",
    "/src/cubing/**/*",
    "/docs/**/*",
    "/*/package.json",
    "/*/index.d.ts"
  ]
}
